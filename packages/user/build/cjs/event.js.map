{"version":3,"sources":["../../src/event.ts","../../src/core/src/client.ts"],"sourcesContent":["import { getCurrentScope } from './core/src/client'\r\n\r\ntype eventOptions = {\r\n    page?: string,\r\n    type: string, //事件类型\r\n    eventid?: string,\r\n    message: string\r\n}\r\n\r\nexport function eventCollect() {\r\n    return function(optinos: eventOptions) {\r\n        const currentClient = getCurrentScope()\r\n        if(currentClient === undefined) {\r\n            throw new Error(\"client is not exist\")\r\n        }\r\n\r\n        if(currentClient.colletEvent == null) {\r\n            currentClient.colletEvent = collect(optinos)\r\n        } else {\r\n            currentClient.colletEvent(optinos)\r\n        }\r\n    }\r\n}\r\n\r\nfunction collect(optinos: eventOptions) {\r\n    const currentClient = getCurrentScope()\r\n    const pages = getCurrentPages()\r\n    const currentPage = pages[pages.length - 1]?.route || optinos.page || ''\r\n    const op: eventOptions = {\r\n        page: currentPage,\r\n        type: optinos.type || 'click',\r\n        eventid: optinos.eventid || '',\r\n        message: optinos.message || ''\r\n    }\r\n\r\n    currentClient?.triggerSend(op)\r\n}","export type ClientOptions = {\r\n    dsn?: string;\r\n    plugins: Array<any>;\r\n    transport: Transport;\r\n    flushTime?: number;\r\n    defaultIntegrations?: Boolean\r\n}\r\n\r\nexport interface Transport {\r\n    send<T>(): Promise<T>\r\n}\r\n\r\ntype ErrorType = {\r\n    type: string,\r\n    message: WechatMiniprogram.Error\r\n}\r\n\r\ntype onUnhandledRejection = {\r\n    type: string,\r\n    message: WechatMiniprogram.OnUnhandledRejectionListenerResult\r\n}\r\n\r\ntype queue = {\r\n    type: string,\r\n    message: WechatMiniprogram.OnUnhandledRejectionListenerResult | WechatMiniprogram.Error | string\r\n}\r\n\r\nexport let currrntClient:Client | undefined = undefined\r\n\r\nexport const getCurrentScope = ():Client | undefined => {\r\n    return currrntClient\r\n}\r\nexport const setCurrentScope = (newClient: Client) => {\r\n    currrntClient = newClient\r\n}\r\n\r\nexport abstract class Client {\r\n    protected readonly _dsn?: string;\r\n    protected readonly _options: ClientOptions;\r\n    protected readonly _transport: Transport;\r\n    protected readonly _queue: queue[] = [];\r\n    protected _time: number = 0;\r\n    protected _flushTimer: number | null = null; //定时器\r\n    public colletEvent: any = null\r\n    \r\n    protected constructor(options: ClientOptions) {\r\n        this._options = options\r\n        if(options.dsn) {\r\n            this._dsn = options.dsn\r\n        } else {\r\n            console.debug(\"options missing dsn\")\r\n        }\r\n\r\n        this._transport = options.transport\r\n    }\r\n\r\n    public init(): void {\r\n        //handle plugin\r\n        const { plugins } = this._options \r\n        console.log(\"client init\")\r\n        plugins.forEach(fn => {\r\n            fn(this._options)\r\n        })\r\n    }\r\n\r\n    public sendEvent() {\r\n        if(this._queue.length === 0) {\r\n            return\r\n        }\r\n        if(this._flushTimer !== null) {\r\n            clearTimeout(this._flushTimer)\r\n            this.sendQueueHandle()\r\n        } else {\r\n            this.sendQueueHandle()\r\n        }\r\n    }\r\n\r\n    public sendQueueHandle() {\r\n        this._time = this._options.flushTime || this._time\r\n        if(this._queue.length < 30) {\r\n            this._flushTimer = setTimeout(() => {\r\n                this._transport.send()\r\n                this.sendEvent()\r\n            },this._time)\r\n        } else {\r\n            this._transport.send()\r\n            this.sendEvent()\r\n        }\r\n    } \r\n\r\n    public triggerSend(event: ErrorType | onUnhandledRejection | {type: string, message: string}) {\r\n        //cache indexdb?\r\n        this._queue.push(event)\r\n        this.sendEvent()\r\n    }\r\n\r\n    public getQueue() {\r\n        return this._queue\r\n    }\r\n}"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,kBAAAE,IAAA,eAAAC,EAAAH,GC2BO,IAAII,EAEEC,EAAkB,IACpBD,EDrBJ,SAASE,GAAe,CAC3B,OAAO,SAASC,EAAuB,CACnC,IAAMC,EAAgBC,EAAgB,EACtC,GAAGD,IAAkB,OACjB,MAAM,IAAI,MAAM,qBAAqB,EAGtCA,EAAc,aAAe,KAC5BA,EAAc,YAAcE,EAAQH,CAAO,EAE3CC,EAAc,YAAYD,CAAO,CAEzC,CACJ,CAEA,SAASG,EAAQH,EAAuB,CAxBxC,IAAAI,EAyBI,IAAMH,EAAgBC,EAAgB,EAChCG,EAAQ,gBAAgB,EAExBC,EAAmB,CACrB,OAFgBF,EAAAC,EAAMA,EAAM,OAAS,CAAC,IAAtB,YAAAD,EAAyB,QAASJ,EAAQ,MAAQ,GAGlE,KAAMA,EAAQ,MAAQ,QACtB,QAASA,EAAQ,SAAW,GAC5B,QAASA,EAAQ,SAAW,EAChC,EAEAC,GAAA,MAAAA,EAAe,YAAYK,EAC/B","names":["event_exports","__export","eventCollect","__toCommonJS","currrntClient","getCurrentScope","eventCollect","optinos","currentClient","getCurrentScope","collect","_a","pages","op"]}