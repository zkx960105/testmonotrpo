{"version":3,"sources":["../../src/client.ts","../../src/core/src/client.ts"],"sourcesContent":["import { Client } from \"./core/src/index\"\r\n\r\nexport class BrowserClient extends Client {\r\n    public constructor(options) {\r\n        super(options)\r\n    }\r\n}","export type ClientOptions = {\r\n    dsn?: string;\r\n    plugins: Array<any>;\r\n    transport: Transport;\r\n    flushTime?: number;\r\n    defaultIntegrations?: Boolean\r\n}\r\n\r\nexport interface Transport {\r\n    send<T>(): Promise<T>\r\n}\r\n\r\ntype ErrorType = {\r\n    type: string,\r\n    message: WechatMiniprogram.Error\r\n}\r\n\r\ntype onUnhandledRejection = {\r\n    type: string,\r\n    message: WechatMiniprogram.OnUnhandledRejectionListenerResult\r\n}\r\n\r\ntype queue = {\r\n    type: string,\r\n    message: WechatMiniprogram.OnUnhandledRejectionListenerResult | WechatMiniprogram.Error | string\r\n}\r\n\r\nexport let currrntClient:Client | undefined = undefined\r\n\r\nexport const getCurrentScope = ():Client | undefined => {\r\n    return currrntClient\r\n}\r\nexport const setCurrentScope = (newClient: Client) => {\r\n    currrntClient = newClient\r\n}\r\n\r\nexport abstract class Client {\r\n    protected readonly _dsn?: string;\r\n    protected readonly _options: ClientOptions;\r\n    protected readonly _transport: Transport;\r\n    protected readonly _queue: queue[] = [];\r\n    protected _time: number = 0;\r\n    protected _flushTimer: number | null = null; //定时器\r\n    public colletEvent: any = null\r\n    \r\n    protected constructor(options: ClientOptions) {\r\n        this._options = options\r\n        if(options.dsn) {\r\n            this._dsn = options.dsn\r\n        } else {\r\n            console.debug(\"options missing dsn\")\r\n        }\r\n\r\n        this._transport = options.transport\r\n    }\r\n\r\n    public init(): void {\r\n        //handle plugin\r\n        const { plugins } = this._options \r\n        console.log(\"client init\")\r\n        plugins.forEach(fn => {\r\n            fn(this._options)\r\n        })\r\n    }\r\n\r\n    public sendEvent() {\r\n        if(this._queue.length === 0) {\r\n            return\r\n        }\r\n        if(this._flushTimer !== null) {\r\n            clearTimeout(this._flushTimer)\r\n            this.sendQueueHandle()\r\n        } else {\r\n            this.sendQueueHandle()\r\n        }\r\n    }\r\n\r\n    public sendQueueHandle() {\r\n        this._time = this._options.flushTime || this._time\r\n        if(this._queue.length < 30) {\r\n            this._flushTimer = setTimeout(() => {\r\n                this._transport.send()\r\n                this.sendEvent()\r\n            },this._time)\r\n        } else {\r\n            this._transport.send()\r\n            this.sendEvent()\r\n        }\r\n    } \r\n\r\n    public triggerSend(event: ErrorType | onUnhandledRejection | {type: string, message: string}) {\r\n        //cache indexdb?\r\n        this._queue.push(event)\r\n        this.sendEvent()\r\n    }\r\n\r\n    public getQueue() {\r\n        return this._queue\r\n    }\r\n}"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,mBAAAE,IAAA,eAAAC,EAAAH,GCoCO,IAAeI,EAAf,KAAsB,CASf,YAAYC,EAAwB,CAL9C,KAAmB,OAAkB,CAAC,EACtC,KAAU,MAAgB,EAC1B,KAAU,YAA6B,KACvC,KAAO,YAAmB,KAGtB,KAAK,SAAWA,EACbA,EAAQ,IACP,KAAK,KAAOA,EAAQ,IAEpB,QAAQ,MAAM,qBAAqB,EAGvC,KAAK,WAAaA,EAAQ,SAC9B,CAEO,MAAa,CAEhB,GAAM,CAAE,QAAAC,CAAQ,EAAI,KAAK,SACzB,QAAQ,IAAI,aAAa,EACzBA,EAAQ,QAAQC,GAAM,CAClBA,EAAG,KAAK,QAAQ,CACpB,CAAC,CACL,CAEO,WAAY,CACZ,KAAK,OAAO,SAAW,IAGvB,KAAK,cAAgB,MACpB,aAAa,KAAK,WAAW,EAC7B,KAAK,gBAAgB,GAErB,KAAK,gBAAgB,EAE7B,CAEO,iBAAkB,CACrB,KAAK,MAAQ,KAAK,SAAS,WAAa,KAAK,MAC1C,KAAK,OAAO,OAAS,GACpB,KAAK,YAAc,WAAW,IAAM,CAChC,KAAK,WAAW,KAAK,EACrB,KAAK,UAAU,CACnB,EAAE,KAAK,KAAK,GAEZ,KAAK,WAAW,KAAK,EACrB,KAAK,UAAU,EAEvB,CAEO,YAAYC,EAA2E,CAE1F,KAAK,OAAO,KAAKA,CAAK,EACtB,KAAK,UAAU,CACnB,CAEO,UAAW,CACd,OAAO,KAAK,MAChB,CACJ,EDjGO,IAAMC,EAAN,cAA4BC,CAAO,CAC/B,YAAYC,EAAS,CACxB,MAAMA,CAAO,CACjB,CACJ","names":["client_exports","__export","BrowserClient","__toCommonJS","Client","options","plugins","fn","event","BrowserClient","Client","options"]}